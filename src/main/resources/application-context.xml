<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2020 David L. Whitehurst
  ~
  ~ Licensed under the Apache License, Version 2.0
  ~ (the "License"); You may not use this file except
  ~ in compliance with the License. You may obtain a
  ~ copy of the License at http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  ~ either express or implied. See the License for the specific
  ~ language governing permissions and limitations under the
  ~ License.
  ~
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="cryptographer"
          class="org.dlw.ai.blackboard.Cryptographer" /> 

    <bean id="controller"
          class="org.dlw.ai.blackboard.Controller" />

    <bean id="blackboard"
          class="org.dlw.ai.blackboard.Blackboard" >
    </bean>
          
	<!-- all working knowledge sources -->
    <bean id="solvedKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.SolvedKnowledgeSource" />
	
    <bean id="sentenceStructureKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.SentenceStructureKnowledgeSource" />

    <bean id="patternMatchingKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.PatternMatchingKnowledgeSource" />

    <bean id="smallWordKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.SmallWordKnowledgeSource" />

    <bean id="wordStructureKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.WordStructureKnowledgeSource" />

    <bean id="legalStringKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.LegalStringKnowledgeSource" />

    <bean id="doubleLetterKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.DoubleLetterKnowledgeSource" />

    <bean id="commonSuffixKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.CommonSuffixKnowledgeSource" />

    <bean id="commonPrefixKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.CommonPrefixKnowledgeSource" />

    <bean id="letterFrequencyKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.LetterFrequencyKnowledgeSource" />

    <bean id="consonantKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.ConsonantKnowledgeSource" />

    <bean id="vowelKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.VowelKnowledgeSource" />

    <bean id="directSubstitutionKnowledgeSource"
          class="org.dlw.ai.blackboard.knowledge.cryptogram.DirectSubstitutionKnowledgeSource" />

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${hibernate.connection.driver_class}"/>
        <property name="url" value="${hibernate.connection.url}"/>
        <property name="username" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>
    </bean>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="ruleSetDao" class="org.dlw.ai.blackboard.dao.hibernate.RuleSetDaoHibernate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
          
</beans>
